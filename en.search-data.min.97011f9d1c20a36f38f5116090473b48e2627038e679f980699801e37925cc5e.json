[{"id":0,"href":"/orangecrab-hardware/docs/downloads/","title":"Downloads","section":"Docs","content":" Downloads # KiCad Sources # OrangeCrab GitHub Repository\nOther # Interactive HTML Bill Of Materials\nSchematic (PDF)\nBoard CAD model (STEP)\nProduction Gerbers (ZIP)\n"},{"id":1,"href":"/orangecrab-hardware/docs/getting-started/","title":"Getting Started","section":"Docs","content":" Getting Started # First time using an FPGA? This guide should cover everything you need to get the example verilog project built and loaded up on the OrangeCrab.\nToolchain Setup # This guide will make use of the Open Source FPGA toolchain. It is possible to build and install these from scratch, but the whole process takes around 30 minutes, and can be a bit tricky if you\u0026rsquo;re just getting started.\nIt\u0026rsquo;s advised to use an automated build from YosysHQ/oss-cad-suite-build\nThe guide will use Ubuntu Linux for a command reference.\nGrab the latest build for your platform, extract them somewhere on your PC, and add the oss-cad-suite/bin folder to your path:\n$ tar -xvf oss-cad-suite-linux-x64-[version].tgz $ export PATH=$(pwd)/oss-cad-suite/bin:$PATH - MacOS: export PATH=[path-to-bin]:$PATH - Linux: export PATH=[path-to-bin]:$PATH - Windows Powershell: $ENV:PATH = \u0026#34;[path-to-bin];\u0026#34; + $ENV:PATH - Windows cmd.exe: PATH=[path-to-bin];%PATH% Check that they\u0026rsquo;ve been correctly installed by running:\n$ yosys -V Yosys 0.32+63 (git sha1 de54cf1a0, clang 10.0.0-4ubuntu1 -fPIC -Os)$ nextpnr-ecp5 -V \u0026#34;nextpnr-ecp5\u0026#34; -- Next Generation Place and Route (Version nextpnr-0.6-46-ge08471df) The above steps only set the PATH variable for the current terminal session. Depending on your platform there are options to ensure the tools are kept in your path. On linux based systems you may also need to add a udev rule to enable user access to the usb device, once added you\u0026rsquo;ll need to reload the rules or un-plug and reconnect the OrangeCrab for it to take effect\n$ echo \u0026#34;ATTRS{idVendor}==\\\u0026#34;1209\\\u0026#34;, ATTRS{idProduct}==\\\u0026#34;5af0\\\u0026#34;, MODE=\\\u0026#34;0666\\\u0026#34;, GROUP=\\\u0026#34;plugdev\\\u0026#34;, TAG+=\\\u0026#34;uaccess\\\u0026#34;\u0026#34; | sudo tee /etc/udev/rules.d/99-orangecrab.rules $ sudo udevadm trigger You can check the connection and permissions using dfu-util\n$ dfu-util --list dfu-util 0.11-dev Copyright 2005-2009 Weston Schmidt, Harald Welte and OpenMoko Inc. Copyright 2010-2021 Tormod Volden and Stefan Schmidt This program is Free Software and has ABSOLUTELY NO WARRANTY Please report bugs to http://sourceforge.net/p/dfu-util/tickets/ Found DFU: [1209:5af0] ver=0101, devnum=53, cfg=1, intf=0, path=\u0026#34;1-1\u0026#34;, alt=0, name=\u0026#34;0x00080000 Bitstream\u0026#34;, serial=\u0026#34;UNKNOWN\u0026#34; Found DFU: [1209:5af0] ver=0101, devnum=53, cfg=1, intf=0, path=\u0026#34;1-1\u0026#34;, alt=1, name=\u0026#34;0x00100000 RISC-V Firmware\u0026#34;, serial=\u0026#34;UNKNOWN\u0026#34; Build Verilog Example # Download the example repository. We\u0026rsquo;ll build the verilog/blink example to test that everything is working.\n$ git clone https://github.com/orangecrab-fpga/orangecrab-examples $ cd OrangeCrab-examples/verilog/blink $ make ... snip ... Info: [ 81336, 81410) |* Info: [ 81410, 81484) | Info: [ 81484, 81558) | Info: [ 81558, 81632) |* ecppack --compress --freq 38.8 --input blink_out.config --bit blink.bit cp blink.bit blink.dfu dfu-suffix -v 1209 -p 5af0 -a blink.dfu dfu-suffix (dfu-util) 0.11 Copyright 2011-2012 Stefan Schmidt, 2013-2014 Tormod Volden This program is Free Software and has ABSOLUTELY NO WARRANTY Please report bugs to http://sourceforge.net/p/dfu-util/tickets/ Suffix successfully added to file If you have an OrangeCrab with a ECP5-85F installed then add the DENSITY flag when making\n$ make DENSITY=85F ðŸ¥³ Congratulations you\u0026rsquo;ve successfully compiled gateware for the ECP5 on the orangecrab!\nUpload Verilog Example # Next, while holding the button on the OrangeCrab, plug it in. This enters the bootloader and enables you to upload new gateware.\nThe LED should be smoothly fading through different colours.\n$ make dfu dfu-util -D blink.dfu dfu-util 0.11 Copyright 2005-2009 Weston Schmidt, Harald Welte and OpenMoko Inc. Copyright 2010-2016 Tormod Volden and Stefan Schmidt This program is Free Software and has ABSOLUTELY NO WARRANTY Please report bugs to http://sourceforge.net/p/dfu-util/tickets/ Match vendor ID from file: 1209 Match product ID from file: 5af0 Opening DFU capable USB device... ID 1209:5af0 Run-time device DFU version 0101 Claiming USB DFU Interface... Setting Alternate Setting #0 ... Determining device status: state = dfuIDLE, status = 0 dfuIDLE, continuing DFU mode device DFU version 0101 Device returned transfer size 4096 Copying data from PC to DFU device Download\t[=========================] 100% 99314 bytes Download done. state(7) = dfuMANIFEST, status(0) = No error condition is present state(8) = dfuMANIFEST-WAIT-RESET, status(0) = No error condition is present Done! You should now see the LED blinking through colours!\nðŸ¥³ Congratulations you\u0026rsquo;ve successfully loaded this gateware onto the ECP5 on the OrangeCrab!\n"},{"id":2,"href":"/orangecrab-hardware/docs/r0.1/","title":"Introduction","section":"Docs","content":"\nDescription # Initial version of the OrangeCrab, an electronics development board featuring a Lattice ECP5 FPGA, and DDR3 memory. Primarily designed to prototype RISCV SoC and evaluate custom peripherals.\nTechnical details # Lattice ECP5 25 (With limited support for 45/85 variants) DDR3L Memory upto 1Gbit (64Mbit x16) Micro USB connection Full-speed (12Mbit) USB direct connection to FPGA Battery charger, with charge indicator LED Reset Button 16Mbit QSPI FLASH Memory (Bitstream + User storage) 4bit MicroSD socket 48MHz Oscillator (Used by USB system) ATSAMD10/11 Co-processor planned mainly for the ADC/DAC Spare 3.3V I/O\u0026rsquo;s broken out onto a 30pin low profile connector 7 diff pairs 1 single ended only Photos # "},{"id":3,"href":"/orangecrab-hardware/docs/r0.2.1/","title":"Introduction","section":"Docs","content":"\nDescription # Updated version of the OrangeCrab, an electronics development board featuring a Lattice ECP5 FPGA, and DDR3 memory. Primarily designed to prototype RISCV SoC and evaluate custom peripherals.\nThis updated version switched to USB-C, removed excessive DDR3 termination, changed the power supplies and added castellated edges to the I/O.\nThis version is in production by GroupGets, and available from GroupGets, 1BitSquared, and element14.\nTechnical details # Here are the main details for the OrangeCrab (25F/85F)\nLattice ECP5-25F or ECP5-85F FPGA in csfBGA285 package 24 K - Look Up Tables 1008 Kb - Embedded Block RAM 194 Kb - Distributed RAM 28 - 18x18 Multipliers PLLs: 2 Internal oscillator Flexible I/O for DDR3 Memory Support DDR3L Memory 128 Mbytes (1Gbit) or 512Mbytes (4Gbit) x16 data width to FPGA 1.35V low voltage operation USB-C connection Full-speed (12Mbit) USB with direct connection to FPGA Non-volatile Storage 128Mbit QSPI FLASH Memory Bootloader (First 4Mbits) User Bitstream User storage (Firmware/MSC backend/etc) QSPI compatible MicroSD socket 4bit SD interface (CK, CMD, DAT0-3) Power supply High effeciency DCDC for main supplies Battery charger (100mA), with charge indicator LED LiPo battery connector (PH type) (1-cell: 3.7-4.2V) 48MHz onboard oscillator Accesible 0.1\u0026quot; JTAG breakout User I/O 1x Button 1x RGB LED 20x I/O on 0.1\u0026quot; headers Analog System Analog Mux SAR ADC, external RC / input comparator of FPGA Digital bypass Internal channels for supply monitor Battery voltage sensing Feather Format Board Dimensions: 22.86mm x 50.8mm (0.9\u0026quot; x 2.0\u0026quot;) Castellated I/O edges Pinouts # DDR3 (IOVCC=1.35V) # Name Pad ADDR[0] C4 ADDR[1] D2 ADDR[2] D3 ADDR[3] A3 ADDR[4] A4 ADDR[5] D4 ADDR[6] C3 ADDR[7] B2 ADDR[8] B1 ADDR[9] D1 ADDR[10] A7 ADDR[11] C2 ADDR[12] B6 ADDR[13] C1 ADDR[14] A2 ADDR[15] C7 ODT C13 RESETn L18 Name Pad BA[0] D6 BA[1] B7 BA[2] A6 RAS C12 CAS D13 WEn B12 CSn A12 DM[0] D16 DM[1] G16 DQ[0] C17 DQ[1] D15 DQ[2] B17 DQ[3] C16 DQ[4] A15 DQ[5] B13 DQ[6] A17 DQ[7] A13 DQ[8] F17 Name Pad DQ[9] F16 DQ[10] G15 DQ[11] F15 DQ[12] J16 DQ[13] C18 DQ[14] H16 DQ[15] F18 DQS_n[0] B15 DQS_p[1] G18 CLK_p J18 CKE D18 *virtual_vccio[0] K16 *virtual_vccio[1] D17 *virtual_vccio[2] K15 *virtual_vccio[3] K17 *virtual_vccio[4] B18 *virtual_vccio[5] C6 *virtual_gnd[0] L15 *virtual_gnd[1] L16 Virtual VCCIO and GND are connected to VCCIO and GND on the PCB. They should be driven HIGH and LOW respectively to reduce SSO noise on the DDR3 I/O bank. General (IOVCC=3.3V) # Name Pad GPIO0 N17 GPIO1 M18 GPIO5 B10 GPIO6 B9 GPIO9 C8 GPIO10 B8 GPIO11 A8 GPIO12 H2 GPIO13 J2 GPIOA0 L4 GPIOA1 N3 GPIOA2 N4 GPIOA3 H4 Name Pad clk48 A9 rgb_led0_r K4 rgb_led0_g M3 rgb_led0_b J3 BTN J17 RSTn V17 USB_p N1 USB_n M2 USB_pu N2 QSPI_CSn U17 QSPI_CLK U16 QSPI_DQ[0] U18 QSPI_DQ[1] T18 QSPI_DQ[2] R18 QSPI_DQ[3] N18 Name Pad SD_DAT[0] J1 SD_DAT[1] K3 SD_DAT[2] L3 SD_DAT[3] M1 SD_CMD K2 SD_CLK K1 SD_CD L1 ANA_MUX[0] F4 ANA_MUX[0] F3 ANA_MUX[0] F2 ANA_MUX[0] H1 ANA_SENSE_L G3 ANA_SENSE_H H3 ANA_CTRL[0] G1 ANA_CTRL[1] F1 Photos # "},{"id":4,"href":"/orangecrab-hardware/docs/r0.2/","title":"Introduction","section":"Docs","content":"\nDescription # Updated version of the OrangeCrab, an electronics development board featuring a Lattice ECP5 FPGA, and DDR3 memory. Primarily designed to prototype RISCV SoC and evaluate custom peripherals.\nThis updated version improved the multiboot experience by connecting an FPGA I/O to the reset line.\nThis version was produced as a small batch for a GroupGets campaign.\nTechnical details # Here are the main details for the OrangeCrab (25F)\nLattice ECP5-25F FPGA in csfBGA285 package 24 K - Look Up Tables 1008 Kb - Embedded Block RAM 194 Kb - Distributed RAM 28 - 18x18 Multipliers PLLs: 2 Internal oscillator Flexible I/O for DDR3 Memory Support DDR3L Memory 128 Mbytes (1Gbit) 64M x16 1.35V low voltage operation Micro USB connection Full-speed (12Mbit) USB with direct connection to FPGA Non-volatile Storage 128Mbit QSPI FLASH Memory Bootloader (First 4Mbits) User Bitstream User storage (Firmware/MSC backend/etc) QSPI compatible MicroSD socket 4bit SD interface (CK, CMD, DAT0-3) Power supply High effeciency DCDC for main supplies Battery charger (100mA), with charge indicator LED LiPo battery connector (PH type) 48MHz onboard oscillator Standard 0.05\u0026quot; JTAG connector User I/O 1x Button 1x RGB LED 20x I/O on 0.1\u0026quot; headers Analog System Analog Mux SAR ADC, external RC / input comparator of FPGA Digital bypass Internal channels for supply monitor Battery voltage sensing Feather Format Board Dimensions: 22.86mm x 50.8mm (0.9\u0026quot; x 2.0\u0026quot;) Pinouts # DDR3 (IOVCC=1.35V) # Name Pad ADDR[0] C4 ADDR[1] D2 ADDR[2] D3 ADDR[3] A3 ADDR[4] A4 ADDR[5] D4 ADDR[6] C3 ADDR[7] B2 ADDR[8] B1 ADDR[9] D1 ADDR[10] A7 ADDR[11] C2 ADDR[12] B6 ADDR[13] C1 ADDR[14] A2 ADDR[15] C7 ODT C13 RESETn L18 Name Pad BA[0] D6 BA[1] B7 BA[2] A6 RAS C12 CAS D13 WEn B12 CSn A12 DM[0] D16 DM[1] G16 DQ[0] C17 DQ[1] D15 DQ[2] B17 DQ[3] C16 DQ[4] A15 DQ[5] B13 DQ[6] A17 DQ[7] A13 DQ[8] F17 Name Pad DQ[9] F16 DQ[10] G15 DQ[11] F15 DQ[12] J16 DQ[13] C18 DQ[14] H16 DQ[15] F18 DQS_n[0] B15 DQS_p[1] G18 CLK_p J18 CKE D18 *virtual_vccio[0] K16 *virtual_vccio[1] D17 *virtual_vccio[2] K15 *virtual_vccio[3] K17 *virtual_vccio[4] B18 *virtual_vccio[5] C6 *virtual_gnd[0] L15 *virtual_gnd[1] L16 Virtual VCCIO and GND are connected to VCCIO and GND on the PCB. They should be driven HIGH and LOW respectively to reduce SSO noise on the DDR3 I/O bank. General (IOVCC=3.3V) # Name Pad GPIO0 N17 GPIO1 M18 GPIO5 B10 GPIO6 B9 GPIO9 C8 GPIO10 B8 GPIO11 A8 GPIO12 H2 GPIO13 J2 GPIOA0 L4 GPIOA1 N3 GPIOA2 N4 GPIOA3 H4 Name Pad clk48 A9 rgb_led0_r K4 rgb_led0_g M3 rgb_led0_b J3 BTN J17 RSTn V17 USB_p N1 USB_n M2 USB_pu N2 QSPI_CSn U17 QSPI_CLK U16 QSPI_DQ[0] U18 QSPI_DQ[1] T18 QSPI_DQ[2] R18 QSPI_DQ[3] N18 Name Pad SD_DAT[0] J1 SD_DAT[1] K3 SD_DAT[2] L3 SD_DAT[3] M1 SD_CMD K2 SD_CLK K1 SD_CD L1 ANA_MUX[0] F4 ANA_MUX[0] F3 ANA_MUX[0] F2 ANA_MUX[0] H1 ANA_SENSE_L G3 ANA_SENSE_H H3 ANA_CTRL[0] G1 ANA_CTRL[1] F1 Photos # "},{"id":5,"href":"/orangecrab-hardware/docs/pinout/","title":"Pinout","section":"Docs","content":" Pinout # Click for larger version\n"}]